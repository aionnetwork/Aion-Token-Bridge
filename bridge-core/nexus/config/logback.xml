<configuration debug="true">
    <property name="LOG_BASE" value="logs" />
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoders are assigned the type
             ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
        <encoder>
            <pattern>%d{HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="SMTP" class="ch.qos.logback.classic.net.SMTPAppender" >
        <smtpHost>smtp.gmail.com</smtpHost>
        <smtpPort>465</smtpPort>
        <SSL>true</SSL>
        <username></username>
        <password></password>
        <asynchronousSending>false</asynchronousSending>
        <bufferSize>1</bufferSize>

        <to></to>
        <from></from>
        <subject>ATB-relay %X{machineName}@%X{externalIp}</subject>
        <layout class="ch.qos.logback.classic.html.HTMLLayout">
            <pattern>%date%level%logger{24}%msg</pattern>
        </layout>

        <evaluator class="ch.qos.logback.classic.boolex.JaninoEventEvaluator">
            <expression>
                marker != null &amp;&amp; marker.contains("SMTP_TRIGGER")
            </expression>
        </evaluator>
    </appender>

    <!-- Error appender which only logs error level messages (critical issues)-->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_BASE}/error_relay.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover. Make sure the path matches the one in the file element or else
             the rollover logs are placed in the working directory. -->
            <fileNamePattern>${LOG_BASE}/error_relay_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 120 days' worth of history (Planned bridge operation period) -->
            <maxHistory>120</maxHistory>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- Appender to log all messages -->
    <appender name="FILE_ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_BASE}/all_relay.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- daily rollover. Make sure the path matches the one in the file element or else
             the rollover logs are placed in the working directory. -->
            <fileNamePattern>${LOG_BASE}/all_relay_%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>50MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <!-- keep 120 days' worth of history (Planned bridge operation period) -->
            <maxHistory>120</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!-- disable HttpService output ethLogs, too noisy -->
    <logger name="org.web3j.protocol.http.HttpService" level="WARN">
        <appender-ref ref="STDOUT" />
    </logger>

    <logger name="org.aion.client.blockchain.common.oracle.BlockchainOracleSchedulerThread" level="WARN">
    </logger>

    <logger name="io.grpc" level="WARN">
    </logger>

    <!-- Noisy logs, disable unless need to debug -->
    <logger name="org.aion.bridge.chain.aion.api.AionJsonRpcConnection" level="WARN">
    </logger>

    <logger name="org.aion.bridge.chain.eth.api.EthJsonRpcConnection" level="WARN">
    </logger>

    <root level="DEBUG">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="SMTP" />
        <appender-ref ref="FILE_WARN" />
        <appender-ref ref="FILE_ERROR" />
        <appender-ref ref="FILE_ALL" />
    </root>
</configuration>